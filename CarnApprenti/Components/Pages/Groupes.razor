@page "/groupes"
@inject NavigationManager Navigation
@inject DatabaseService DatabaseService
@inject IJSRuntime js
<button href="accueil_admins" @onclick="GoBack" class="retour-link bouton">Retour</button>
<h1>Gestion des groupes</h1>

<div class="container_bouton">
    <a href="add_groupes" class="bouton">Ajouter un groupe</a>
</div>

@if (groupes == null)
{
    <p>Chargement des groupes...</p>
}
else
{
    <table class="users" border="1">
        <thead>
            <tr>
                <th>Groupe</th>
                <th>Modifier</th>
                <th>Supprimer</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var groupe in groupes)
            {
                <tr>
                    <td>@groupe.Nom</td>
                    <td>
                        <a class="btn btn-warning" href="edit_groupes/@groupe.Id">
                            Modifier
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => ConfirmDelete(groupe.Id)">Supprimer</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    private List<LivretApprentissageContext.Groupe>? groupes;

    protected override async Task OnInitializedAsync()
    {
        groupes = await DatabaseService.GetGroupesAsync();
    }

    private async Task LoadGroupes()
    {
        groupes = await DatabaseService.GetGroupesAsync();
    }

    private async Task ConfirmDelete(ulong idGroupe)
    {
        bool confirmed = await js.InvokeAsync<bool>("confirm", "Êtes-vous sûr de vouloir supprimer ce groupe ?");
        if (confirmed)
        {
            await DeleteGroupe(idGroupe);
        }
    }

    private async Task DeleteGroupe(ulong idGroupe)
    {
        await DatabaseService.DeleteGroupeAsync(idGroupe);
        await LoadGroupes(); // Recharger la liste après suppression
    }

    private void GoBack()
    {
        Navigation.NavigateTo("..");
    }
}
