@page "/observations/{livretId}"
@using Microsoft.AspNetCore.Components.Forms
@using static CarnApprenti.LivretApprentissageContext
@inject DatabaseService DatabaseService
@inject NavigationManager Navigation
@inject IJSRuntime js

<button class="btn btn-secondary mb-3" @onclick="GoBack">← Retour</button>

<h3 class="text-center mb-4">Modifier les observations</h3>

@if (isLoading)
{
    <div class="text-center">
        <h2>Chargement des données...</h2>
    </div>
}
else
{
    <EditForm Model="livret" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger mb-3" />

        <div class="mb-4">
            <label for="observationsApprentiGlobal" class="form-label">Observations globales de l'apprenti</label>
            <textarea id="observationsApprentiGlobal" class="form-control" rows="5" @bind="livret.ObservationApprentiGlobal"></textarea>
        </div>

        <div class="mb-4">
            <label for="observationsAdmin" class="form-label">Observations du Responsable Pédagogique</label>
            <textarea id="observationsAdmin" class="form-control" rows="5" @bind="livret.ObservationAdmin"></textarea>
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary btn-lg">Mettre à jour</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public string LivretId { get; set; }

    private bool isLoading = true;
    private Livret livret = new Livret();

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        try
        {
            // Récupérer le livret à partir de la base de données en utilisant l'ID
            livret = await DatabaseService.GetLivretByIdAsync(ulong.Parse(LivretId));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors du chargement des données du livret : {ex.Message}");
        }

        isLoading = false;
    }

    private async Task HandleSubmit()
    {
        try
        {
            // Mettre à jour les observations dans la base de données
            await DatabaseService.UpdateLivretObservationsAsync(livret);

            // Redirection vers la page des livrets après l'enregistrement
            Navigation.NavigateTo("/livrets");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de la soumission des observations : {ex.Message}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/livrets");
    }
}
